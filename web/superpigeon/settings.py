"""
Django settings for superpigeon project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import getpass
import djcelery

djcelery.setup_loader()


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'g^c3-*#q=66%i#0_f_q#&a!795=3ted=j=$ey#%gfl^_k+2lyw')

BROKER_URL = 'amqp://rabbitmq:rabbitmq@rabbit:5672/'

WOOCOMMERCE_CONSUMER_KEY = 'ck_c29c2c917f2c07b99492d1bdff262a98fddff26f'
WOOCOMMERCE_CONSUMER_SECRET = 'cs_62d3707cf8e6b2cbc1fb1d591c71b27f205aa0d1'
WOOCOMMERCE_URL = 'https://nemiarising.com'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'NO').lower() in ('on', 'true', 'y', 'yes')

ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

CELERYBEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"
SERVICES_MIGRATED = True

STATIC_ROOT = os.path.join(os.path.dirname(__file__), "..", "static")

STATIC_ROOT = os.path.join(os.path.dirname(__file__), "..", "static")

# Application definition

INSTALLED_APPS = [
    'djcelery',
    #'django_celery_beat',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # apps
    'django_jenkins',
    'superpigeon.apps.todo',
    'superpigeon.apps.api',
    'auditlog',
    'prettyjson',
    'django_db_logger',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders'
]

PROJECT_APPS = [
    'superpigeon.apps.api'
]

JENKINS_TASKS = (
    'django_jenkins.tasks.run_pep8',
    'django_jenkins.tasks.run_pyflakes',
    #'django_jenkins.tasks.run_jslint',
    #'django_jenkins.tasks.run_csslint',
    'django_jenkins.tasks.run_sloccount'
)

MIDDLEWARE = [
    'superpigeon.apps.middleware.DefaultMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10

}

ROOT_URLCONF = 'superpigeon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'superpigeon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if getpass.getuser() == 'jenkins':
    import uuid
    key = uuid.uuid1().hex
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, '../../%s.sqlite3' % key),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.environ.get('DB_NAME', 'superpigeon'),
            'USER': os.environ.get('DB_USER', 'superpigeon'),
            'PASSWORD': os.environ.get('DB_PASS', 'superpigeon'),
            'HOST': os.environ.get('DB_SERVICE', 'localhost'),
            'PORT': os.environ.get('DB_PORT', 3306)
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'

PROTECTED_URL = [
    '/api/profile/',
    '/api/product/',
    '/api/dimension/',
    '/api/category/',
    '/api/tag/',
    '/api/image/',
    '/api/attribute/',
    '/api/default_attribute/',
    '/api/metadata/'
]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(asctime)s %(message)s'
        },
    },
    'handlers': {
        'db_log': {
            'level': 'DEBUG',
            'class': 'django_db_logger.db_log_handler.DatabaseLogHandler'
        },
    },
    'loggers': {
        'db': {
            'handlers': ['db_log'],
            'level': 'DEBUG'
        }
    }
}
